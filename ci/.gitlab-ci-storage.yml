before_script:
  - pwd
  - whoami
  - go version
  - docker version

stages:
  - build
  - lint
  - test
  - testlogic

build_stage:
  stage: build
  only:
    - merge_requests
  tags:
    - storage
  script:
    - ./build/builder.sh mkrelease linux-gnu

lint_stage:
  stage: lint
  only:
    - merge_requests
  tags:
    - storage
  script:
    - ./build/builder.sh env ZNBASE_LOGIC_TEST_SKIP=true stdbuf -oL -eL make lint TESTTIMEOUT=45m USE_ROCKSDB_ASSERTIONS=1 2>&1

cppcheck_stage:
  stage: lint
  only:
    - merge_requests
  tags:
    - storage
  script:
    - chmod +x ./ci/cppcheck.sh
    - ./ci/cppcheck.sh 2>&1
  allow_failure: true
  # Allows this job to fail without impacting the rest of the CI suite.
  # When enabled and the job fails, the job will show an orange warning in the UI.
  # However, the logical flow of the pipeline will consider the job a
  # success/passed, and is not blocked.

test_stage:
  stage: test
  only:
    - merge_requests
  tags:
    - storage
  script:
    - ./build/builder.sh env ZNBASE_NIGHTLY_STRESS=true stdbuf -oL -eL make test TESTTIMEOUT=45m 2>&1

testlogic_stage:
  stage: testlogic
  only:
    - merge_requests
  tags:
    - storage
  script:
    - ./build/builder.sh stdbuf -oL -eL make testlogic TESTTIMEOUT=45m 2>&1