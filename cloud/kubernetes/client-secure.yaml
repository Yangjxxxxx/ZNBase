apiVersion: v1
kind: Pod
metadata:
  name: znbasedb-client-secure
  labels:
    app: znbasedb-client
spec:
  serviceAccountName: znbasedb
  initContainers:
  # The init-certs container sends a certificate signing request to the
  # kubernetes cluster.
  # You can see pending requests using: kubectl get csr
  # CSRs can be approved using:         kubectl certificate approve <csr name>
  #
  # In addition to the client certificate and key, the init-certs entrypoint will symlink
  # the cluster CA to the certs directory.
  - name: init-certs
    image: znbasedb/znbase-k8s-request-cert:0.4
    imagePullPolicy: IfNotPresent
    command:
    - "/bin/ash"
    - "-ecx"
    - "/request-cert -namespace=${POD_NAMESPACE} -certs-dir=/znbase-certs -type=client -user=root -symlink-ca-from=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
    env:
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    volumeMounts:
    - name: client-certs
      mountPath: /znbase-certs
  containers:
  - name: znbasedb-client
    image: znbasedb/znbase:v2.1.6
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: client-certs
      mountPath: /znbase-certs
    # Keep a pod open indefinitely so kubectl exec can be used to get a shell to it
    # and run znbase client commands, such as znbase sql, znbase node status, etc.
    command:
    - sleep
    - "2147483648" # 2^31
  # This pod isn't doing anything important, so don't bother waiting to terminate it.
  terminationGracePeriodSeconds: 0
  volumes:
  - name: client-certs
    emptyDir: {}
